@Article{Wolf:2018hb,
author = {Wolf, F Alexander and Angerer, Philipp and Theis, Fabian J}, 
title = {SCANPY: large-scale single-cell gene expression data analysis.}, 
journal = {Genome biology}, 
volume = {19}, 
number = {1}, 
pages = {15}, 
year = {2018}, 
abstract = {SCANPY is a scalable toolkit for analyzing single-cell gene expression data. It includes methods for preprocessing, visualization, clustering, pseudotime and trajectory inference, differential expression testing, and simulation of gene regulatory networks. Its Python-based implementation efficiently deals with data sets of more than one million cells (https://github.com/theislab/Scanpy). Along with SCANPY, we present ANNDATA, a generic class for handling annotated data matrices (https://github.com/theislab/anndata).}, 
location = {Helmholtz Zentrum München - German Research Center for Environmental Health, Institute of Computational Biology, Munich, Neuherberg, Germany. alex.wolf@helmholtz-muenchen.de.}, 
keywords = {}}


@Article{Harris2020,
author = {Harris, CR and Millman, KJ and van der Walt, SJ and Gommers, R and Virtanen, P and Cournapeau, D and Wieser, E and Taylor, J and Berg, S and Smith, NJ and Kern, R and Picus, M and Hoyer, S and van Kerkwijk, MH and Brett, M and Haldane, A and Del Río, JF and Wiebe, M and Peterson, P and Gérard-Marchant, P and Sheppard, K and Reddy, T and Weckesser, W and Abbasi, H and Gohlke, C and Oliphant, TE}, 
title = {Array programming with NumPy.}, 
journal = {Nature}, 
volume = {585}, 
number = {7825}, 
pages = {357--362}, 
year = {2020}, 
abstract = {Array programming provides a powerful, compact and expressive syntax for accessing, manipulating and operating on data in vectors, matrices and higher-dimensional arrays. NumPy is the primary array programming library for the Python language. It has an essential role in research analysis pipelines in fields as diverse as physics, chemistry, astronomy, geoscience, biology, psychology, materials science, engineering, finance and economics. For example, in astronomy, NumPy was an important part of the software stack used in the discovery of gravitational waves$^{1}$ and in the first imaging of a black hole$^{2}$. Here we review how a few fundamental array concepts lead to a simple and powerful programming paradigm for organizing, exploring and analysing scientific data. NumPy is the foundation upon which the scientific Python ecosystem is constructed. It is so pervasive that several projects, targeting audiences with specialized needs, have developed their own NumPy-like interfaces and array objects. Owing to its central position in the ecosystem, NumPy increasingly acts as an interoperability layer between such array computation libraries and, together with its application programming interface (API), provides a flexible framework to support the next decade of scientific and industrial analysis.}, 
location = {Independent researcher, Logan, UT, USA. Brain Imaging Center, University of California, Berkeley, Berkeley, CA, USA. millman@berkeley.edu. Division of Biostatistics, University of California, Berkeley, Berkeley, CA, USA. millman@berkeley.edu. Berkeley Institute for Data Science, University of California, Berkeley, Berkeley, CA, USA. millman@berkeley.edu. Brain Imaging Center, University of California, Berkeley, Berkeley, CA, USA. stefanv@berkeley.edu. Berkeley Institute for Data Science, University of California, Berkeley, Berkeley, CA, USA. stefanv@berkeley.edu. Applied Mathematics, Stellenbosch University, Stellenbosch, South Africa. stefanv@berkeley.edu. Quansight, Austin, TX, USA. ralf.gommers@gmail.com. Department of Physics, University of Jyväskylä, Jyväskylä, Finland. Nanoscience Center, University of Jyväskylä, Jyväskylä, Finland. Mercari JP, Tokyo, Japan. Department of Engineering, University of Cambridge, Cambridge, UK. Independent researcher, Karlsruhe, Germany. Berkeley Institute for Data Science, University of California, Berkeley, Berkeley, CA, USA. Independent researcher, Berkeley, CA, USA. Enthought, Austin, TX, USA. Berkeley Institute for Data Science, University of California, Berkeley, Berkeley, CA, USA. Google Research, Mountain View, CA, USA. Department of Astronomy and Astrophysics, University of Toronto, Toronto, Ontario, Canada. Brain Imaging Center, University of California, Berkeley, Berkeley, CA, USA. School of Psychology, University of Birmingham, Edgbaston, Birmingham, UK. Department of Physics, Temple University, Philadelphia, PA, USA. Google, Zurich, Switzerland. Department of Physics and Astronomy, The University of British Columbia, Vancouver, British Columbia, Canada. Amazon, Seattle, WA, USA. Quansight, Austin, TX, USA. Independent researcher, Saue, Estonia. Department of Mechanics and Applied Mathematics, Institute of Cybernetics at Tallinn Technical University, Tallinn, Estonia. Department of Biological and Agricultural Engineering, University of Georgia, Athens, GA, USA. France-IX Services, Paris, France. Department of Economics, University of Oxford, Oxford, UK. CCS-7, Los Alamos National Laboratory, Los Alamos, NM, USA. Berkeley Institute for Data Science, University of California, Berkeley, Berkeley, CA, USA. Quansight, Austin, TX, USA. Laboratory for Fluorescence Dynamics, Biomedical Engineering Department, University of California, Irvine, Irvine, CA, USA. Quansight, Austin, TX, USA.}, 
keywords = {}}


@Article{Huber2015,
author = {Huber, W and Carey, VJ and Gentleman, R and Anders, S and Carlson, M and Carvalho, BS and Bravo, HC and Davis, S and Gatto, L and Girke, T and Gottardo, R and Hahne, F and Hansen, KD and Irizarry, RA and Lawrence, M and Love, MI and MacDonald, J and Obenchain, V and Oleś, AK and Pagès, H and Reyes, A and Shannon, P and Smyth, GK and Tenenbaum, D and Waldron, L and Morgan, M}, 
title = {Orchestrating high-throughput genomic analysis with Bioconductor.}, 
journal = {Nat Methods}, 
volume = {12}, 
number = {2}, 
pages = {115--121}, 
year = {2015}, 
abstract = {Bioconductor is an open-source, open-development software project for the analysis and comprehension of high-throughput data in genomics and molecular biology. The project aims to enable interdisciplinary research, collaboration and rapid development of scientific software. Based on the statistical programming language R, Bioconductor comprises 934 interoperable packages contributed by a large, diverse community of scientists. Packages cover a range of bioinformatic and statistical applications. They undergo formal initial review and continuous automated testing. We present an overview for prospective users and contributors.}, 
location = {European Molecular Biology Laboratory, Heidelberg, Germany. 1] Channing Division of Network Medicine, Brigham and Women’s Hospital and Harvard Medical School, Boston, Massachusetts, USA. [2] Harvard School of Public Health, Boston, Massachusetts, USA. Genentech, South San Francisco, California, USA. European Molecular Biology Laboratory, Heidelberg, Germany. Computational Biology Program, Fred Hutchinson Cancer Research Center, Seattle, Washington, USA. Department of Medical Genetics, School of Medical Sciences, State University of Campinas, Campinas, Brazil. Center for Bioinformatics and Computational Biology, University of Maryland, College Park, Maryland, USA. Center for Cancer Research, National Cancer Institute, National Institutes of Health, Bethesda, Maryland, USA. Department of Biochemistry, University of Cambridge, Cambridge, UK. Institute for Integrative Genome Biology, University of California, Riverside, Riverside, California, USA. Vaccine and Infectious Disease Division, Fred Hutchinson Cancer Research Center, Seattle, Washington, USA. Novartis Institutes for Biomedical Research, Basel, Switzerland. 1] McKusick-Nathans Institute of Genetic Medicine, Johns Hopkins University, Baltimore, Maryland, USA. [2] Department of Biostatistics, Johns Hopkins University, Baltimore, Maryland, USA. 1] Harvard School of Public Health, Boston, Massachusetts, USA. [2] Dana-Farber Cancer Institute, Boston, Massachusetts, USA. Genentech, South San Francisco, California, USA. 1] Harvard School of Public Health, Boston, Massachusetts, USA. [2] Dana-Farber Cancer Institute, Boston, Massachusetts, USA. Department of Environmental and Occupational Health Sciences, University of Washington, Seattle, Washington, USA. Computational Biology Program, Fred Hutchinson Cancer Research Center, Seattle, Washington, USA. European Molecular Biology Laboratory, Heidelberg, Germany. Computational Biology Program, Fred Hutchinson Cancer Research Center, Seattle, Washington, USA. European Molecular Biology Laboratory, Heidelberg, Germany. Computational Biology Program, Fred Hutchinson Cancer Research Center, Seattle, Washington, USA. 1] Walter and Eliza Hall Institute of Medical Research, Parkville, Victoria, Australia. [2] Department of Mathematics and Statistics, University of Melbourne, Parkville, Victoria, Australia. Computational Biology Program, Fred Hutchinson Cancer Research Center, Seattle, Washington, USA. School of Urban Public Health at Hunter College, City University of New York, New York, New York, USA. Computational Biology Program, Fred Hutchinson Cancer Research Center, Seattle, Washington, USA.}, 
keywords = {}}


@Article{Hoyer2017,
author = {Hoyer, Stephan and Hamman, Joe}, 
title = {xarray: ND labeled arrays and datasets in Python}, 
journal = {Journal of Open Research Software}, 
volume = {5}, 
number = {1}, 
pages = {}, 
year = {2017}, 
abstract = {Abstract xarray is an open source project and Python package that provides a toolkit and data structures for N-dimensional labeled arrays. Our approach combines an application programing interface (API) inspired by pandas with the Common Data Model for self-described scientific data. Key features of the xarray package include label-based indexing and arithmetic, interoperability with the core scientific Python packages (eg, pandas, NumPy, Matplotlib), out-of-core computation on datasets that don’t fit into memory, a wide range of …}, 
location = {}, 
keywords = {}}


@Article{Buitinck2013,
author = {Buitinck, Lars and Louppe, Gilles and Blondel, Mathieu and Pedregosa, Fabian and Mueller, Andreas and Grisel, Olivier and Niculae, Vlad and Prettenhofer, Peter and Gramfort, Alexandre and Grobler, Jaques and Layton, Robert and Vanderplas, Jake and Joly, Arnaud and Holt, Brian and Varoquaux, Gaël}, 
title = {API design for machine learning software: experiences from the scikit-learn project}, 
journal = {arXivEuropean Conference on Machine Learning and Principles and Practices of Knowledge Discovery in Databases (2013)}, 
volume = {}, 
number = {}, 
pages = {1309.0238v1}, 
year = {2013}, 
abstract = {Scikit-learn is an increasingly popular machine learning li- brary. Written in Python, it is designed to be simple and efficient, accessible to non-experts, and reusable in various contexts. In this paper, we present and discuss our design choices for the application programming interface (API) of the project. In particular, we describe the simple and elegant interface shared by all learning and processing units in the library and then discuss its advantages in terms of composition and reusability. The paper also comments on implementation details specific to the Python ecosystem and analyzes obstacles faced by users and developers of the library.}, 
location = {}, 
keywords = {}}


@Book{Murphy2012,
author = {Murphy, Kevin P.}, 
title = {Machine Learning: A Probabalistic Perspective}, 
volume = {}, 
pages = {1067}, 
editor = {}, 
publisher = {MIT Press}, 
address = {}, 
year = {2012}, 
abstract = {A comprehensive introduction to machine learning that uses probabilistic models and inference as a unifying approach. Today’s Web-enabled deluge of electronic data calls for automated methods of data analysis. Machine learning provides these, developing methods that can automatically detect patterns in data and then use the uncovered patterns to predict future data. This textbook offers a comprehensive and self-contained introduction to the field of machine learning, based on a unified, probabilistic approach. The coverage combines breadth and depth, offering necessary background material on such topics as probability, optimization, and linear algebra as well as discussion of recent developments in the field, including conditional random fields, L1 regularization, and deep learning. The book is written in an informal, accessible style, complete with pseudo-code for the most important algorithms. All topics are copiously illustrated with color images and worked examples drawn from such application domains as biology, text processing, computer vision, and robotics. Rather than providing a cookbook of different heuristic methods, the book stresses a principled model-based approach, often using the language of graphical models to specify models in a concise and intuitive way. Almost all the models described have been implemented in a MATLAB software package---PMTK (probabilistic modeling toolkit)---that is freely available online. The book is suitable for upper-level undergraduates with an introductory-level college math background and beginning graduate students.}, 
keywords = {Computers}}

@Proceedings{McKinney2010,
author = {McKinney, Wes}, 
editor = {}, 
title = {Data structures for statistical computing in python}, 
booktitle = {Data structures for statistical computing in python}, 
volume = {Proceedings of the 9th Python in Science Conference 445}, 
publisher = {Austin, TX}, 
address = {}, 
pages = {51-56}, 
year = {2010}, 
abstract = {In this paper we are concerned with the practical issues of working with data sets common to finance, statistics, and other related fields. pandas is a new library which aims to facilitate working with these data sets and to provide a set of fundamental building blocks for implementing statistical models.}, 
keywords = {}}
